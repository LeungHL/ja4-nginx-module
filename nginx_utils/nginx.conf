
worker_processes 1;

error_log /etc/nginx/logs/error.log warn;
pid /etc/nginx/logs/nginx.pid;

events {
    worker_connections 32;
}


http {
    include mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log logs/access.log main;
    sendfile on;
    keepalive_timeout 65;

    # HTTPS server
    server {
        listen 443 ssl;

        server_name localhost;

        ssl_certificate server.crt;
        ssl_certificate_key server.key;

        # 控制http1.1或者h2的连接超时时间，生产环境调大一些，此处10s方便测试
        keepalive_timeout 10s;
        # 阻止nginx针对tls1.3连接响应NewSessionTicket (PRE_SHARED_KEY PSK重连机制)来进行重连会话恢复，强迫浏览器重连时必须通过证书验证的方式，否则同一个浏览器tls1.3请求重连时将出现两种ja4指纹
        ssl_session_tickets off;
        # prevent caching issue w/ signature algorithm extension，对ja4指纹没影响，没必要关
        # ssl_session_cache off;


        location / {
            add_header Content-Type text/plain;
            return 200 "
            JA4: $http_ssl_ja4\n
            JA4 String: $http_ssl_ja4_string\n
            JA4one: $http_ssl_ja4one\n
            JA4S: $http_ssl_ja4s\n
            JA4S String: $http_ssl_ja4s_string\n
            JA4H: $http_ssl_ja4h\n
            JA4H String: $http_ssl_ja4h_string\n
            JA4T: $http_ssl_ja4t\n
            JA4T String: $http_ssl_ja4t_string\n
            JA4TS: $http_ssl_ja4ts\n
            JA4TS String: $http_ssl_ja4ts_string\n
            JA4X: $http_ssl_ja4x\n
            JA4L: $http_ssl_ja4l\n
            ";

        }

    }

    server {
        listen 80;
        server_name localhost;
        add_header Content-Type text/plain;

        location / {
            return 200 "ok";
        }
    }
}
